apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-user-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      {{- include "postgresql.waitForDatabase" . | nindent 6 }}
      containers:
        - name: user-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 5052
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.global.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-user-service-secrets
                  key: postgres-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-user-service-secrets
                  key: jwt-secret
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-user-service-secrets
                  key: rabbitmq-password
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.global.postgresql.auth.database }}
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.port | quote }}
            - name: RABBITMQ_HOST
              value: "{{ .Values.rabbitmq.serviceName }}.{{ .Values.rabbitmq.namespace }}.svc.cluster.local"
            - name: RABBITMQ_PORT
              value: {{ .Values.rabbitmq.port | quote }}
            - name: RABBITMQ_USERNAME
              value: {{ .Values.rabbitmq.username }}
            